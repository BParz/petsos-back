const fs = require('fs');
const path = require('path');

// Configuraci√≥n para pruebas de email
const envConfig = `# Configuraci√≥n SMTP para pruebas
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=petsosstg@gmail.com
SMTP_PASS=Petsos2025#

# URLs del sistema
BASE_URL=http://localhost:3000
FRONTEND_URL=https://bparz.github.io

# Email de soporte
SUPPORT_EMAIL=soporte@petsos.com
`;

function setupEmailEnv() {
    const envPath = path.join(__dirname, '.env');

    try {
        // Verificar si el archivo .env ya existe
        if (fs.existsSync(envPath)) {
            console.log('üìù Archivo .env ya existe. Verificando configuraci√≥n de email...');

            const currentEnv = fs.readFileSync(envPath, 'utf8');

            // Verificar si ya tiene la configuraci√≥n de email
            if (currentEnv.includes('SMTP_USER=petsosstg@gmail.com')) {
                console.log('‚úÖ Configuraci√≥n de email ya est√° presente en .env');
                return;
            }

            // Agregar configuraci√≥n de email al archivo existente
            const updatedEnv = currentEnv + '\n' + envConfig;
            fs.writeFileSync(envPath, updatedEnv);
            console.log('‚úÖ Configuraci√≥n de email agregada al archivo .env existente');
        } else {
            // Crear nuevo archivo .env
            fs.writeFileSync(envPath, envConfig);
            console.log('‚úÖ Archivo .env creado con configuraci√≥n de email');
        }

        console.log('\nüéâ Configuraci√≥n de email lista para pruebas!');
        console.log('üìß Email: petsosstg@gmail.com');
        console.log('üîë Contrase√±a: Petsos2025#');
        console.log('\nüí° Ahora puedes ejecutar: npm run test:email');

    } catch (error) {
        console.error('‚ùå Error configurando variables de entorno:', error.message);
        console.log('\nüìã Configuraci√≥n manual:');
        console.log('Crea un archivo .env en la ra√≠z del proyecto con:');
        console.log(envConfig);
    }
}

// Ejecutar configuraci√≥n
setupEmailEnv();